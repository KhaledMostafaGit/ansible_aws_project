---
- name: Configure Web Server on EC2 Instances
  hosts: all              # This will target all hosts in your dynamic inventory
  become: true            # Elevate privileges to install packages and modify system files
  gather_facts: yes       # Gather system facts (helpful for package installation and templating)
  vars:
    nginx_version: "1.24.0-2ubuntu7"         # Specify the desired Nginx version
    nginx_custom_directory: "/home/ubuntu/nginx"
    web_root_directory: "/var/www/html"
    s3_bucket: "khaled-ansible-playbooks"
  tasks:
    # Detect OS type
    - name: Set facts for OS type
      set_fact:
        is_ubuntu: "{{ ansible_distribution == 'Ubuntu' }}"
        is_amazon: "{{ ansible_distribution == 'Amazon' }}"

    # Ubuntu-specific tasks
    - name: Update apt cache and upgrade packages (Ubuntu)
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600
        upgrade: yes
      when: is_ubuntu

    - name: Install Nginx (Ubuntu)
      ansible.builtin.apt:
        name: "nginx"
        state: present
      when: is_ubuntu
      notify: Restart web server

    # Amazon Linux specific tasks
    - name: Update yum cache (Amazon Linux)
      ansible.builtin.yum:
        update_cache: yes
      when: is_amazon

    - name: Install Apache (Amazon Linux)
      ansible.builtin.yum:
        name: httpd
        state: present
      when: is_amazon
      notify: Restart web server

    # Create web root directory for both OS types
    - name: Create web root directory
      ansible.builtin.file:
        path: "{{ web_root_directory }}"
        state: directory
        mode: '0755'

    # Create a simple index.html file directly
    - name: Create simple index.html
      copy:
        content: |
          <!DOCTYPE html>
          <html>
          <head>
            <title>AWS SSM Demo with Ansible</title>
            <style>
              body {
                font-family: Arial, sans-serif;
                max-width: 800px;
                margin: 0 auto;
                padding: 20px;
                line-height: 1.6;
                color: #333;
              }
              h1 {
                color: #0066cc;
                text-align: center;
              }
              .server-info {
                background-color: #f5f5f5;
                border-left: 5px solid #0066cc;
                padding: 15px;
                margin: 20px 0;
              }
            </style>
          </head>
          <body>
            <h1>Web Server Successfully Configured!</h1>
            <p>This web server was configured using Ansible via AWS Systems Manager.</p>
            
            <div class="server-info">
              <h2>Server Information:</h2>
              <ul>
                <li><strong>Server Hostname:</strong> {{ ansible_hostname }}</li>
                <li><strong>Operating System:</strong> {{ ansible_distribution }} {{ ansible_distribution_version }}</li>
                <li><strong>IP Address:</strong> {{ ansible_default_ipv4.address }}</li>
                <li><strong>Date Configured:</strong> {{ ansible_date_time.iso8601 }}</li>
              </ul>
            </div>
          </body>
          </html>
        dest: "{{ web_root_directory }}/index.html"
        mode: '0644'

    # Configure web server based on OS type
    - name: Configure Nginx (Ubuntu)
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/sites-available/default
      when: is_ubuntu
      notify: Restart web server

    - name: Enable Nginx configuration (Ubuntu)
      ansible.builtin.file:
        dest: /etc/nginx/sites-enabled/default
        src: /etc/nginx/sites-available/default
        state: link
      when: is_ubuntu
      notify: Restart web server

    # Amazon Linux uses httpd.conf and the config is simpler
    - name: Configure Apache (Amazon Linux)
      copy:
        content: |
          <VirtualHost *:80>
            DocumentRoot {{ web_root_directory }}
            
            <Directory {{ web_root_directory }}>
              Options Indexes FollowSymLinks
              AllowOverride All
              Require all granted
            </Directory>
            
            ErrorLog /var/log/httpd/error.log
            CustomLog /var/log/httpd/access.log combined
          </VirtualHost>
        dest: /etc/httpd/conf.d/vhost.conf
      when: is_amazon
      notify: Restart web server

    # Make sure the appropriate web server is running
    - name: Start and enable web server (Ubuntu)
      ansible.builtin.service:
        name: nginx
        state: started
        enabled: yes
      when: is_ubuntu

    - name: Start and enable web server (Amazon Linux)
      ansible.builtin.service:
        name: httpd
        state: started
        enabled: yes
      when: is_amazon

    # Success message
    - name: Success message
      debug:
        msg: "Web server has been successfully configured on {{ ansible_hostname }}. Access it at http://{{ ansible_default_ipv4.address }}/"

  handlers:
    - name: Restart web server
      ansible.builtin.service:
        name: "{{ 'nginx' if is_ubuntu else 'httpd' }}"
        state: restarted
